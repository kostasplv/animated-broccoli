																							ΑΝΑΠΤΥΞΗ ΛΟΓΙΣΜΙΚΟΥ ΑΣΚΗΣΗ 1η

Ονομα			ΕΠΙΘΕΤΟ			Α.Μ.

ΗΛΙΑΣ			ΒΕΡΓΟΣ			1115201400266
ΚΩΣΤΑΝΤΙΝΟΣ 	ΠΛΕΥΡΗΣ			1115201400162



Προγραμματιστικο Περιβαλλον :LINUX 
Eντολη Μεταγλωτισσης: make

																	EΠΕΞΗΓΗΣΗ ΑΣΚΗΣΗΣ 1

Ο ΒΑΣΙΚΟΣ ΚΟΡΜΟΣ ΤΗΣ ΑΣΚΗΣΗΣ ΒΑΣΙΖΕΤΑΙ ΣΕ 3 ΣΥΝΑΡΤΗΣΕΙΣ:
1)insert_ngram()
2)search()
3)delete_ngram()

1)insert_ngram():
ΥΙΟΘΕΤΩΝΤΑΣ ΚΑΠΟΙΕΣ ΑΠΟ ΤΙΣ ΣΥΝΑΡΤΗΣΕΙΣ ΠΟΥ ΜΑΣ ΔΙΝΟΝΤΑΙ ΣΤΗΝ ΑΣΚΗΣΗ (π.χ. init_trie(),create_trie_node()) ΥΛΟΠΟΙΟΥΜΕ ΤΗΝ ΚΑΤΑΣΚΕΥΗ ΤΟΥ TRIE ΜΕΣΩ ΤΗΣ insert_ngram().ΑΡΧΙΚΑ TO ROOT MAΣ ΑΠΟΤΕΛΕΙΤΑΙ ΑΠΟ ΕΝΑΝ ΠΙΝΑΚΑ ΑΠΟ ΔΕΙΚΤΕΣ ΣΕ ΝΟDES ΚΑΙ ΟΧΙ ΣΚΕΤΟ ΝΟDES OΠΩΣ ΜΑΣ ΠΡΟΤΕΙΝΕΤΑΙ ΣΤΗΝ ΑΣΚΗΣΗ.ΣΤΗΝ ΣΥΝΕΧΙΑ ΣΕ ΚΑΘΕ NODE ΚΡΑΤΑΜΕ ΤΗΝ ΛΕΞΗ ΤΟ ΠΛΗΘΟΣ ΤΟΥ ΠΙΝΑΚΑ ΤΩΝ ΠΑΙΔΙΩΝ ,ΤΟ IS_FINAL ΓΙΑ ΝΑ ΔΟΥΜΕ ΑΝ Ο ΣΥΓΚΕΚΡΙΜΕΝΟΣ ΚΟΜΒΟΣ ΕΙΝΑΙ ΤΕΛΙΚΟΣ , ΕΝΑ NODE_SIZE ΠΟΥ ΕΙΝΑΙ ΤΟ ΑΡΧΙΚΟ ΠΛΗΘΟΣ ΤΟΥ ΠΙΝΑΚΑ ΤΩΝ ΠΑΙΔΙΩΝ ΚΑΙ ΦΥΣΙΚΑ ΤΟΝ ΠΙΝΑΚΑ ΤΩΝ ΠΑΙΔΙΩΝ ΤΟΥ NODE ΑΥΤΟΥ.Η ΣΥΝΑΡΤΗΣΗ ΑΥΤΗ ΕΠΙΤΥΝΧΑΝΕΙ ΤΗΝ ΛΕΙΤΟΥΡΓΙΑ ΤΗΣ ΜΕΣΩ ΜΙΑ ΒΟΗΘΗΤΙΚΗΣ ΣΥΝΑΡΤΗΣΗΣ insert_node() ΠΟΥ ΒΟΗΘΑ ΣΤΗΝ ΕΙΣΑΓΩΓΗ ΣΤΟΙΧΕΙΟΥ ΚΑΤΩ ΑΠΟ ΤΟ ROOT ΔΗΛΑΔΗ ΣΕ ΚΑΠΟΙΟ ΑΠΟ ΤΑ ΠΑΙΔΙΑ.Η ΟΛΗ ΔΙΑΔΙΚΑΣΙΑ ΤΗΣ ΙNSERT ΕΙΝΑΙ:ΠΑΙΡΝΕΙ ΤΗΝ ΦΡΑΣΗ ΑΠΟ ΤΗΝ ΜΑΙΝ ,ΑΝ ΥΠΑΡΧΕΙ ΣΤΟ ROOT Η ΠΡΩΤΗ ΛΕΞΗ ΤΗΣ ΦΡΑΣΗΣ ΤΟΤΕ ΒΡΙΣΚΟΥΜΕ ΤΟ ΣΩΣΤΟ ΠΑΙΔΙ ΜΕΣΩ ΒΙΝΑRY SEARCH ΚΑΙ ΥΣΤΕΡΑ ΚΑΛΟΥΜΕ ΤΗΝ ΑΝΑΔΡΟΜΙΚΗ ΣΥΝΑΡΤΗΣΗ ΓΙΑ ΝΑ ΤΟΠΟΘΕΤΗΣΕΙ ΤΗΝ ΥΠΟΛΟΙΠΗ ΦΡΑΣΗ ΣΤΗΝ ΣΩΣΤΗ ΘΕΣΗ.ΑΝ ΔΕΝ ΑΝΗΚΕΙ ΣΤΟ ROOT Η ΠΡΩΤΗ ΛΕΞΗ ΤΗΣ ΦΡΑΣΗΣ ΠΟΥ ΗΡΘΕ ΤΟΤΕ ΤΗΝ ΒΑΖΟΥΜΕ ΣΤΟ ROOT ΚΑΙ ΚΑΛΟΥΜΕ ΤΗΝ ΑΝΑΔΡΟΜΙΚΗ ΝΑ ΜΑΣ ΒΑΛΕΙ ΤΗΝ ΥΠΟΛΟΙΠΗ ΦΡΑΣΗ ΣΤΗΝ ΣΩΣΤΗ ΘΕΣΗ.ΓΙΑ ΤΗΝ ΤΑΞΙΝΟΜΗΣΗ ΤΟΥ ΚΑΘΕ ΠΙΝΑΚΑ XΡΗΣΙΜΟΠΟΙΟΥΜΕ ΤΗΝ ΣΥΝΑΡΤΗΣΗ ΤΑΞΙΝΟΜΗΣΗΣ INSERTION SORT ΠΟΥ ΕΝΔΕΙΚΝΕΙΤΑΙ ΓΙΑ ΣΧΕΔΟΝ ΤΑΞΙΝΟΜΗΜΕΝΟΥΣ ΠΙΝΑΚΕΣ.

2)search():
Η SEARCH ΞΕΚΙΝΑ ΠΕΡΝΟΝΤΑΣ ΟΛΗ ΤΗΝ QUESTION ΣΕ ΕΝΑ STRING .ΥΣΤΕΡΑ ΧΡΗΣΙΜΟΠΟΙΩΝΤΑΣ ΤΗΝ ΣΥΝΑΡΤΗΣΗ STRTOK()
ΠΑΙΡΝΟΥΜΕ ΤΗΝ ΠΡΩΤΗ ΛΕΞΗ ΚΑΙ ΚΑΙ ΤΗΝ ΥΠΟΛΟΙΠΗ ΦΡΑΣΗ.ΑΝ Η ΠΡΩΤΗ ΛΕΞΗ ΔΕΝ ΑΝΗΚΕΙ ΣΤΟΝ ΠΙΝΑΚΑ ROOT TOTE ΣΥΝΕΧΙΖΟΥΜΕ ΜΕ ΤΗΝ ΕΠΟΜΕΝΗ ΛΕΞΗ.ΑΝ ΟΜΩΣ ΥΠΑΡΧΕΙ ΣΤΟ ROOT ΠΡΕΠΕΙ ΝΑ ΠΑΜΕ ΝΑ ΨΑΞΟΥΜΕ ΤΑ ΠΑΙΔΙΑ ΝΑ ΔΟΥΜΕ ΑΝ ΤΟ ΥΠΟΛΟΙΠΟ ΤΗΣ ΦΡΑΣΗΣ ΤΑΥΤΙΖΕΤΑΙ ΜΕ ΤΑ ΔΙΑΘΕΣΙΜΑ NGRAMS ΠΟΥ ΥΠΑΡΧΟΥΝ ΣΤΟ TRIE.ΑΥΤΟ ΕΠΙΤΥΝΧΑΝΕΤΑΙ ΜΕ ΜΙΑ ΑΝΑΔΡΟΜΙΚΗ ΣΥΝΑΡΤΗΣΗ search_node()
Η ΟΠΟΙΑ ΔΕΧΕΤΑΙ ΜΙΑ ΦΡΑΣΗ ΚΑΙ ΨΑΧΝΕΙ ΝΑ ΒΡΕΙ ΑΝ ΤΑΥΤΙΖΕΤΑΙ ΜΕ ΤΑ ΝΟDES TΟΥ ΤRIE.ΣΕ ΑΥΤΗΝ ΤΗΝ ΣΥΝΑΡΤΗΣΗ(search_node()) ΓΙΑ ΛΟΓΟΥΣ ΟΙΚΟΝΟΜΙΑΣ ΜΝΗΜΗΣ ΠΑΙΡΝΑΜΕ ΤΑ ΟΡΙΣΜΑΤΑ ΜΕ ΤΗΝ ΔΙΕΥΘΥΝΣΗ ΤΟΥΣ ΕΤΣΙ ΩΣΤΕ ΝΑ ΜΗΝ ΔΗΜΙΟΥΡΓΟΥΝΤΑΙ ΑΝΤΙΓΡΑΦΑ.ΟΤΑΝ ΤΕΛΕΙΩΣΕΙ Η ΑΝΑΔΡΟΜΙΚΗ ΑΥΤΗ ΣΥΝΑΡΤΗΣΗ ΤΟΤΕ ΕΧΟΥΜΕ ΑΠΟΘΗΚΕΥΣΗ ΜΕΣΑ ΣΕ ΕΝΑ ΠΙΝΑΚΑ ΤΑ STRING ΠΟΥ ΤΑΥΤΙΣΤΗΚΑΝ ΜΕ ΤΗΝ ΦΡΑΣΗ ΠΟΥ ΜΑΣ ΔΟΘΗΚΕ.Η ΔΙΑΔΙΚΑΣΙΑ ΑΥΤΗ ΕΠΑΝΑΛΑΜΒΑΝΕΤΑΙ ΜΕΧΡΙ ΤΟ ΤΕΛΟΣ ΤΗΣ ΦΡΑΣΗΣ ΠΟΥ ΜΑΣ ΔΟΘΗΚΕ.ΜΟΛΙΣ ΤΕΛΕΙΩΣΟΥΜΕ ΜΕ ΤΗΝ ΦΡΑΣΗ ΠΑΙΡΝΟΥΜΕ ΤΟΝ ΠΙΝΑΚΑ ΠΟΥ ΕΧΟΥΜΕ ΑΠΟΘΗΚΕΥΣΕΙ ΤΑ ΣΩΣΤΑ AΠΟΤΕΛΕΣΜΑΤΑ KAI ΦΤΙΑΧΝΟΥΜΕ ΕΝΑ KAINOYΡΓΙΟ STRING ΠΟΥ ΘΑ ΕΙΝΑΙ Η ΑΠΑΝΤΗΣΗ ΜΑΣ ΣΤΟ QUESTION ΠΟΥ ΕΓΙΝΕ.

3)delete_ngram():
Η ΣΥΝΑΡΤΗΣΗ ΞΕΚΙΝΑ ΠΑΙΡΝΟΝΤΑΣ ΩΣ ΟΡΙΣΜΑΤΑ ΤΟ trie ΚΑΙ ΤΟ n-gram ΠΟΥ ΘΕΛΟΥΜΕ ΝΑ ΔΙΑΓΡΑΨΟΥΜΕ. ΜΕ ΤΗΝ strtok ΠΑΙΡΝΟΥΜΕ ΤΗΝ ΠΡΩΤΗ ΛΕΞΗ ΤΟΥ n-gram ΚΑΙ ΚΑΝΟΝΤΑΣ binary search ΤΗΝ ΨΑΧΝΟΥΜΕ ΣΤΟ root. ΑΝ ΔΕΝ ΥΠΑΡΧΕΙ ΔΕΝ Η ΣΥΝΑΡΤΗΣΗ ΕΠΙΣΤΡΕΦΕΙ 0. ΑΝ ΥΠΑΡΧΕΙ ΤΟΤΕ ΚΑΛΟΥΜΕ ΤΗΝ ΒΟΗΘΗΤΙΚΗ ΣΥΝΑΡΤΗΣΗ delete_node ΠΟΥ ΤΗΣ ΔΙΝΟΥΜΕ ΣΑΝ ΟΡΙΣΜΑΤΑ ΤΗΝ ΥΠΟΛΟΙΠΗ ΦΡΑΣΗ ΧΩΡΙΣ ΤΗΝ ΠΡΩΤΗ ΛΕΞΗ ΚΑΙ ΤΟ trie_node ΠΟΥ ΒΡΗΚΑΜΕ ΤΗΝ ΠΡΩΤΗ ΛΕΞΗ. ΣΤΗ ΣΥΝΕΧΕΙΑ, Η ΒΟΗΘΙΤΙΚΗ ΣΥΝΑΡΤΗΣΗ, ΞΑΝΑΧΡΗΣΙΜΟΠΟΙΕΙ ΤΗΝ strtok ΓΙΑ ΝΑ ΠΑΡΕΙ ΜΙΑ ΜΙΑ ΤΙΣ ΛΕΞΕΙΣ ΑΠΟ ΤΟ string, ΜΕΤΑ ΑΠΟΘΗΚΕΥΕΙ ΣΕ 2 ΠΙΝΑΚΕΣ Α) ΤΗΝ ΔΙΕΥΘΗΝΣΗ ΤΟΥ trie_node ΚΑΙ Β) ΤΗΝ ΘΕΣΗ ΜΕΣΑ ΣΤΟΝ ΠΙΝΑΚΑ ΤΩΝ children ΤΟΥ trie_node, ΠΟΥ ΒΡΙΣΚΕΤΑΙ Η ΕΠΟΜΕΝΗ ΛΕΞΗ. ΑΝ ΚΑΠΟΙΑ ΣΤΙΓΜΗ ΔΕΝ ΒΡΕΙ ΤΗΝ ΕΠΟΜΕΝΗ ΛΕΞΗ ΑΠΛΑ ΕΠΙΣΤΡΕΦΕΙ 0 ΚΑΙ Η ΚΥΡΙΑ ΣΥΝΑΡΤΗΣΗ ΕΠΙΣΗΣ ΕΠΙΣΤΡΕΦΕΙ 0. ΑΝ ΚΑΤΑΦΕΡΕΙ ΚΑΙ ΒΡΕΙ ΟΛΕΣ ΤΙΣ ΛΕΞΕΙΣ ΤΟΤΕ ΟΙ 2 ΠΙΝΑΚΕΣ ΠΟΥ ΔΗΜΙΟΥΡΓΗΣΑΜΕ ΘΑ ΠΕΡΙΕΧΟΥΝ ΣΕ ΑΥΞΟΥΣΑ ΣΕΙΡΑ ΤΗΝ ΔΙΕΥΘΥΝΣΗ ΤΟΥ trie_node ΚΑΙ ΤΗΝ ΘΕΣΗ ΣΤΟΝ ΠΙΝΑΚΑ ΤΩΝ children, ΟΠΟΥ ΠΕΡΙΕΧΕΤΑΙ Η ΕΠΟΜΕΝΗ ΛΕΞΗ ΑΠΟ ΤΟ n-gram ΠΟΥ ΘΕΛΟΥΜΕ ΝΑ ΔΙΑΓΡΑΨΟΥΜΕ. ΜΕΤΑ ΠΑΜΕ ΣΕ ΜΙΑ ΕΠΑΝΑΛΗΨΗ ΑΠΟ ΤΗΝ ΤΕΛΕΥΤΑΙΑ ΘΕΣΗ ΤΩΝ ΠΙΝΑΚΩΝ ΠΡΟΣ ΤΗΝ ΠΡΩΤΗ ΚΑΙ ΚΟΙΤΑΜΕ ΑΝ ΤΟ trie_node ΠΟΥ ΠΕΡΙΕΧΕΙ ΑΥΤΗΝ ΤΗΝ ΛΕΞΗ ΕΙΝΑΙ final ΚΟΜΒΟΣ, ΑΝ ΔΕΝ ΕΙΝΑΙ ΤΟΤΕ ΕΠΙΣΤΡΕΦΟΥΜΕ ΛΑΘΟΣ, ΑΝ ΕΙΝΑΙ ΤΟΤΕ ΚΟΙΤΑΜΕ ΑΝ ΕΧΕΙ ΠΑΙΔΙΑ, ΑΝ ΕΧΕΙ ΑΠΛΑ ΚΑΝΟΥΜΕ ΤΟΝ ΚΟΜΒΟ ΑΠΟ ΤΕΛΙΚΟ ΣΕ ΜΗ ΤΕΛΙΚΟ ΚΑΙ ΤΕΛΕΙΩΝΟΥΜΕ. ΑΝ ΔΕΝ ΕΧΕΙ ΠΑΙΔΙΑ ΤΟΤΕ ΔΙΑΓΡΑΦΟΥΜΕ ΤΟΝ ΚΟΜΒΟ ΑΥΤΟΝ ΚΑΙ ΠΑΜΕ ΠΙΟ ΠΑΝΩ ΝΑ ΚΟΙΤΑΞΟΥΜΕ ΤΟΝ ΚΟΜΒΟ ΤΗΣ ΠΡΟΗΓΟΥΜΕΝΗΣ ΛΕΞΗΣ, ΑΝ ΑΥΤΟΣ ΕΙΝΑΙ ΤΕΛΙΚΟΣ ΤΟΤΕ ΔΕΝ ΣΥΝΕΧΙΖΟΥΜΕ ΤΗΝ ΔΙΑΓΡΑΦΗ. ΑΝ ΔΕΝ ΕΙΝΑΙ ΤΕΛΙΚΟΣ ΚΑΙ ΕΧΕΙ ΠΑΙΔΙΑ ΑΠΛΑ ΣΤΑΜΑΤΑΜΕ, ΑΝ ΔΕΝ ΕΧΕΙ ΠΑΙΔΕΙΑ ΤΟΤΕ ΤΟΝ ΔΙΑΓΡΑΦΟΥΜΕ ΚΑΙ ΣΥΝΕΧΙΖΟΥΜΕ ΑΥΤΗΝ ΤΗΣ ΔΙΑΔΙΚΑΣΙΑ ΜΕΧΡΙ ΝΑ ΦΤΑΣΟΥΜΕ ΣΤΗΝ ΠΡΩΤΗ ΛΕΞΗ.

